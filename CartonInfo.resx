<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        /gAAAP4BT8Ki/gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFXSURBVFhHxdY7
        SgRBEMbxBjMxMBFcn7fwCLpmJiJ4AsHE0EuYCKKhZzFzEcHA1/pKPYD5+G+c1tner0Z6t7e34DfMfFRT
        FczAuKqqpkqGJcmwDbWFExxiRvWkkKGFOoa/CS5UXwoZKlQ83Our3hQyjFFquHem+lPIsImyhr9iUZ1J
        IcOAahu+os6kkqFHWcPfsKrOjEKH9vB3ZBvuDQftw9fi/nENPtjDP7De7M3l78Ye/oCJDPd+LvbwG+yg
        m9km5uvZbh/x4BI+sQ13WwfTcAV33QhKu4fbbQQlfaEbXsKjOoz1sAf/Iubk/ylmf7+Cf5a4w3Loy23w
        wV7iBRNZYjiwl+hjKe4flw7tJZ6RdQkZelTbEh11ZhQyDChriSdkWUKGTZS1xCMW1JkUMoxR1hKnqj+F
        DBVKLVHmtzyg4iUuVV8KGbahNnCOA8ypnhQyLEmG5VTuGwIjALYCcf9iAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>