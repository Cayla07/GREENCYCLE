<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        /gAAAP4BT8Ki/gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFXSURBVFhHxdY7
        SgRBEMbxBjMxMBFcn7fwCLpmJiJ4AsHE0EuYCKKhZzFzEcHA1/pKPYD5+G+c1tner0Z6t7e34DfMfFRT
        FczAuKqqpkqGJcmwDbWFExxiRvWkkKGFOoa/CS5UXwoZKlQ83Our3hQyjFFquHem+lPIsImyhr9iUZ1J
        IcOAahu+os6kkqFHWcPfsKrOjEKH9vB3ZBvuDQftw9fi/nENPtjDP7De7M3l78Ye/oCJDPd+LvbwG+yg
        m9km5uvZbh/x4BI+sQ13WwfTcAV33QhKu4fbbQQlfaEbXsKjOoz1sAf/Iubk/ylmf7+Cf5a4w3Loy23w
        wV7iBRNZYjiwl+hjKe4flw7tJZ6RdQkZelTbEh11ZhQyDChriSdkWUKGTZS1xCMW1JkUMoxR1hKnqj+F
        DBVKLVHmtzyg4iUuVV8KGbahNnCOA8ypnhQyLEmG5VTuGwIjALYCcf9iAAAAAElFTkSuQmCC
</value>
  </data>
</root>