<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>