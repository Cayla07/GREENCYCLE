<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jca5vwENQGtfFEBCmQAAAABJRU5ErkJggg==
</value>
  </data>
</root>