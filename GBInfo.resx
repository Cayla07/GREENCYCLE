<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DkTOYAAAAABJRU5ErkJggg==
</value>
  </data>
</root>